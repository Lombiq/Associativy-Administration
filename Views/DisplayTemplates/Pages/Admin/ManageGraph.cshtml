@model Associativy.Administration.Models.Pages.Admin.AssociatvyManageGraphPart
@using Associativy.Frontends.Extensions
           
@{
    Layout.Title = Model.GraphDescriptor.DisplayName.ToString();
    Script.Require("jQuery").AtFoot();
    var graphInfo = Model.GraphDescriptor.Services.ConnectionManager.GetGraphInfo();
}

<h2>
    @T("Graph management")
</h2>


<div id="associativy-administration-graph-info-container">
    <h3>@T("Graph info")</h3>
    
    <p>
        @T("Number of nodes in the graph: {0}", graphInfo.NodeCount) @T("Number of connections: {0}", graphInfo.ConnectionCount)
    </p>
</div>

<div id="associativy-administration-frontend-engines-container">
    <h3>@T("View graph")</h3>
    <ul>
    @foreach (var engine in Model.FrontendEngines)
    {
        <li>
            @Html.Link(T("View with the {0} frontend engine", engine.DisplayEngineName.Text).Text, @Url.RouteEngineUrl(engine, Model.GraphDescriptor.Name))
        </li>
    }
    </ul>
</div>

<div id="associativy-administration-export-container">
    <h3>@T("Export")</h3>
    @Html.ActionLink(T("Export connections").Text, "ExportConnections", new { GraphName = Model.GraphDescriptor.Name }, new { @class = "button" })
    <span class="hint">@T("This only exports connection data. The nodes (i.e. the content items stored in the graph) have to be exported with the built-in Import/Export feature.")</span>
</div>

<div id="associativy-administration-import-container">
        <fieldset>
            <legend>@T("Import")</legend>
            @Html.Label("ConnectionsFile", T("Select a connections file").ToString())
            @Html.TextBox("ConnectionsFile", "", new { type = "file", @class = "text" })
            <span class="hint">@T("This only imports connections. Content items have to be be imported separately with the built-in Import/Export feature.")</span>
        </fieldset>
        <button type="submit" name="submit.ImportConnections" class="button" value="yes please">@T("Import connections")</button>
    @*Trick taken from Contrib.FileField*@
    @using (Script.Foot())
    {
        <script type="text/javascript">
            (function ($) {
                $(document).ready(function () {
                    $($("button[name='submit.ImportConnections']")[0].form)
		                .attr('enctype', 'multipart/form-data')
		                .attr('encoding', 'multipart/form-data'); // ie issue
                });
            })(jQuery);
        </script>
    }
</div>

<div id="associativy-administration-graph-settings-container">
        <fieldset>
            <legend>@T("Graph settings")</legend>
            <ol>
                <li>
                    @Html.CheckBoxFor(m => m.GraphSettings.UseCache, T("Use caching"))
                    <label for="@Html.FieldIdFor(m => m.GraphSettings.UseCache)" class="forcheckbox">@T("Use cache")</label>
                </li>
                <li>
                    @Html.LabelFor(m => m.GraphSettings.InitialZoomLevel, T("Initial zoom level"))
                    @Html.TextBoxFor(m => m.GraphSettings.InitialZoomLevel, new { @class = "text text-small" })
                    <span class="hint">@T("The zoom level the graph is initially displayed on (should be zoom level count - 1).")</span>
                </li>
                <li>
                    @Html.LabelFor(m => m.GraphSettings.ZoomLevelCount, T("Zoom level count"))
                    @Html.TextBoxFor(m => m.GraphSettings.ZoomLevelCount, new { @class = "text text-small" })
                    <span class="hint">@T("The number of zoom levels for the graph.")</span>
                </li>
                <li>
                    @Html.LabelFor(m => m.GraphSettings.MaxDistance, T("Maximal distance"))
                    @Html.TextBoxFor(m => m.GraphSettings.MaxDistance, new { @class = "text text-small" })
                    <span class="hint">@T("Maximal distance (in hops) between two nodes that should be considered in an associativy connection.")</span>
                </li>
                <li>
                    @Html.LabelFor(m => m.GraphSettings.MaxConnectionCount, T("Maximal connection count"))
                    @Html.TextBoxFor(m => m.GraphSettings.MaxConnectionCount, new { @class = "text text-small" })
                    <span class="hint">@T("Maximal number of connections displayed from the graph.")</span>
                </li>
            </ol>
        </fieldset>
</div>